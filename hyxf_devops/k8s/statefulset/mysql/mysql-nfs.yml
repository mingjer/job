apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: mysql-k8s-dev1-0
  spec:
    capacity:
      storage: 50Gi
    accessModes:
      - ReadWriteOnce
    persistentVolumeReclaimPolicy: Retain
    storageClassName: "mysql-k8s-dev1"
    nfs:
      path: /k8s/k8s-dev1/mysql/mysql0
      server: 192.192.0.79
      
- apiVersion: v1
  kind: Secret
  metadata:
    name: mysql-secret
    namespace: k8s-dev1
  type: Opaque
  data:
  #该密码是经过base64加密过的，原始密码为123456
    mysql-root-password: MTIzNDU2
    mysql-password: MTIzNDU2

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: mysql-cm
    namespace: k8s-dev1
    labels:
      app: mysql-cm
  data:
    master.cnf: |
      [mysqld]
      server-id = 1
      port = 3306
      default-storage-engine = INNODB
      character-set-server = utf8mb4
      collation-server=utf8mb4_bin
      connect_timeout = 60
      interactive_timeout = 28800
      wait_timeout = 28800
      back_log = 500
      event_scheduler = ON
      skip_name_resolve = ON
      lower_case_table_names = 1
      sql_mode=''
      skip_ssl
      ###########master-slave##########
      log-bin = mysql-bin
      binlog_format = row
      max_binlog_size = 128M
      binlog_cache_size = 2M
      expire-logs-days = 7
      log-slave-updates=true
      master_info_repository=TABLE
      relay_log_info_repository=TABLE
      relay_log_recovery=1
      sync-master-info=1
      # binlog-ignore-db=mysql
      # binlog-ignore-db=test
      # binlog-ignore-db=information_schema
      # binlog-ignore-db=performance_schema
      # gtid_mode=on
      # enforce_gtid_consistency=on
      # slave_parallel_workers=4
      # innodb_flush_log_at_trx_commit=2
      # sync_binlog=100
      # innodb_buffer_pool_size=2G
      ###########slow_query##########
      slow_query_log = 1
      slow_query_log_file = slow.log
      long_query_time = 2
      log_queries_not_using_indexes=1
      log_error = error.log
      max_connections = 3000
      max_connect_errors = 32767
      log_bin_trust_function_creators = 1
      transaction_isolation = READ-COMMITTED
    slave.cnf: |
      [mysqld]
      gtid_mode=ON
      enforce_gtid_consistency=ON
      master_info_repository=TABLE
      relay_log_info_repository=TABLE
      binlog_checksum=NONE
      log_slave_updates=ON
      log_bin=binlog
      binlog_format=ROW
      event_scheduler=OFF

- apiVersion: v1
  kind: Service
  metadata:
    name: mysql-m-svc
    namespace: k8s-dev1
  spec:
    ports:
    - name: mysql
      port: 3306
    clusterIP: None
    selector:
      app: mysql-m-dm

- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    name: mysql-m-sfs
    namespace: k8s-dev1
  spec:
    selector:
      matchLabels:
        app: mysql-m-dm
    serviceName: mysql-m-svc
    replicas: 1
    template:
      metadata:
        labels:
          app: mysql-m-dm
      spec:
        initContainers:
        - name: init-mysql
          image: docker.51xf.cn/mysql/mysql:5.7.24
          command:
          - bash
          - "-c"
          - |
            set -ex
            # Generate mysql server-id from pod ordinal index.
            [[ `hostname` =~ -([0-9]+)$ ]] || exit 1
            ordinal=${BASH_REMATCH[1]}
            echo [mysqld] > /mnt/conf.d/server-id.cnf
            # Add an offset to avoid reserved server-id=0 value.
            echo server-id=$((100 + $ordinal)) >> /mnt/conf.d/server-id.cnf
            # Copy appropriate conf.d files from config-map to emptyDir.
            if [[ $ordinal -eq 0 ]]; then
              cp /mnt/config-map/master.cnf /mnt/conf.d/
            else
              cp /mnt/config-map/slave.cnf /mnt/conf.d/
            fi
          volumeMounts:
          - name: conf
            mountPath: /mnt/conf.d
          - name: config-map
            mountPath: /mnt/config-map
        - name: clone-mysql
          image: docker.51xf.cn/k8s/xtrabackup:1.0
          command:
          - bash
          - "-c"
          - |
            set -ex
            # Skip the clone if data already exists.
            [[ -d /var/lib/mysql/mysql ]] && exit 0
            # Skip the clone on master (ordinal index 0).
            [[ `hostname` =~ -([0-9]+)$ ]] || exit 1
            ordinal=${BASH_REMATCH[1]}
            [[ $ordinal -eq 0 ]] && exit 0
            # Clone data from previous peer.
            ncat --recv-only mysql-$(($ordinal-1)).mysql 3307 | xbstream -x -C /var/lib/mysql
            # Prepare the backup.
            xtrabackup --prepare --target-dir=/var/lib/mysql
          volumeMounts:
          - name: data
            mountPath: /var/lib/mysql
            subPath: mysql
          - name: conf
            mountPath: /etc/mysql/conf.d
        containers:
        - name: mysql
          image: docker.51xf.cn/mysql/mysql:5.7
          env:
          - name: MYSQL_ALLOW_EMPTY_PASSWORD
            value: "1"
          - name: MYSQL_USER
            value: "51xf"
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: mysql-password
                name: mysql-secret
          - name: MYSQL_DATABASE
            value: "51xfdb"
          ports:
          - name: mysql
            containerPort: 3306
          volumeMounts:
          - name: data
            mountPath: /var/lib/mysql
            subPath: mysql
          - name: conf
            mountPath: /etc/mysql/conf.d
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
          livenessProbe:
            exec:
              command: ["mysqladmin", "ping"]
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              # Check we can execute queries over TCP (skip-networking is off).
              command: ["mysql", "-h", "127.0.0.1", "-e", "SELECT 1"]
            initialDelaySeconds: 5
            periodSeconds: 2
            timeoutSeconds: 1
          volumeMounts:
          - name: data
            mountPath: /var/lib/mysql
            subPath: mysql
          - name: conf
            mountPath: /etc/mysql/conf.d
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
        volumes:
        - name: conf
          emptyDir: {}
        - name: config-map
          configMap:
            name: mysql-cm
    volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: "mysql-k8s-dev1"
        resources:
          requests:
            storage: 50Gi
