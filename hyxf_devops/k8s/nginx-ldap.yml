apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-ldap-cm
  namespace: kube-system
data:
  nginx.conf: |
    events { }
    
    http {
        proxy_cache_path cache/  keys_zone=auth_cache:10m;
    
        upstream k8s-dashboard {
          server kubernetes-dashboard-http.kube-system:9090;
        }
    
        server {
            listen 8081;
    
            # Protected application
            location / {
                auth_request             /auth-proxy;
                error_page 401 =200      /login;
                auth_request_set         $bearer_token $upstream_http_x_token;
                proxy_set_header         Host   $host;
                proxy_set_header         X-Real-IP $remote_addr;
                proxy_set_header         X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header         Authorization "Bearer $bearer_token";
                proxy_ssl_verify         off;
                proxy_ssl_session_reuse  on;
                proxy_pass               http://k8s-dashboard/;
            }
    
            location = /auth-proxy {
                internal;
                proxy_pass               http://127.0.0.1:8888;
                proxy_pass_request_body  off;
                proxy_set_header         Content-Length "";
                proxy_cache              auth_cache;
                proxy_cache_valid        200 10m;
                proxy_cache_key          "$http_authorization$cookie_nginxauth";
                proxy_set_header         X-Ldap-URL      "ldap://192.192.0.110:389";
                proxy_set_header         X-Ldap-BaseDN   "dc=51xf,dc=cn";
                proxy_set_header         X-Ldap-BindDN   "cn=root,dc=51xf,dc=cn";
                proxy_set_header         X-Ldap-BindPass "ilanni";
                proxy_set_header         X-CookieName "nginxauth";
                proxy_set_header         Cookie nginxauth=$cookie_nginxauth;
    proxy_set_header         X-Ldap-Template "(uid=%(username)s)";
            }
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-ldap-svc
  namespace: kube-system
spec:
  type: NodePort
  ports:
  - name: http-pub-port
    port: 8081
    targetPort: 8081
  selector:
    app: nginx-ldap-dm
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nginx-ldap
  namespace: kube-system
spec:
  replicas: 1
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: nginx-ldap-dm
    spec:
      terminationGracePeriodSeconds: 60
      restartPolicy: Always
      containers:
      - name: nginx-ldap-pod
        image: docker.51xf.cn/nginx/nginx-ldap
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: /etc/nginx/
          readOnly: true
          name: nginx-conf
        - mountPath: /var/log/nginx
          name: log
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-ldap-cm
          items:
            - key: nginx.conf
              path: nginx.conf
      - name: log
        emptyDir: {}