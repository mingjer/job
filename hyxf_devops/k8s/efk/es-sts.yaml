apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: pv-es-0
  spec:
    capacity:
      storage: 4Gi
    accessModes:
      - ReadWriteMany
    volumeMode: Filesystem
    persistentVolumeReclaimPolicy: Recycle
    storageClassName: "es-storage-class"
    nfs:
      path: /k8s/public/es/es0
      server: 192.192.0.79

- apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: pv-es-1
  spec:
    capacity:
      storage: 4Gi
    accessModes:
      - ReadWriteMany
    volumeMode: Filesystem
    persistentVolumeReclaimPolicy: Recycle
    storageClassName: "es-storage-class"
    nfs:
      path: /k8s/public/es/es1
      server: 192.192.0.79

- apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: pv-es-2
  spec:
    capacity:
      storage: 4Gi
    accessModes:
      - ReadWriteMany
    volumeMode: Filesystem
    persistentVolumeReclaimPolicy: Recycle
    storageClassName: "es-storage-class"
    nfs:
      path: /k8s/public/es/es2
      server: 192.192.0.79

- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: elasticsearch-logging
    namespace: kube-system
    labels:
      k8s-app: elasticsearch-logging
      kubernetes.io/cluster-service: "true"
      addonmanager.kubernetes.io/mode: Reconcile

- kind: ClusterRole
  apiVersion: rbac.authorization.k8s.io/v1
  metadata:
    name: elasticsearch-logging
    labels:
      k8s-app: elasticsearch-logging
      kubernetes.io/cluster-service: "true"
      addonmanager.kubernetes.io/mode: Reconcile
  rules:
  - apiGroups:
    - ""
    resources:
    - "services"
    - "namespaces"
    - "endpoints"
    verbs:
    - "get"

- kind: ClusterRoleBinding
  apiVersion: rbac.authorization.k8s.io/v1
  metadata:
    namespace: kube-system
    name: elasticsearch-logging
    labels:
      k8s-app: elasticsearch-logging
      kubernetes.io/cluster-service: "true"
      addonmanager.kubernetes.io/mode: Reconcile
  subjects:
  - kind: ServiceAccount
    name: elasticsearch-logging
    namespace: kube-system
    apiGroup: ""
  roleRef:
    kind: ClusterRole
    name: elasticsearch-logging
    apiGroup: ""

- apiVersion: v1
  kind: Service
  metadata:
    name: elasticsearch-logging
    namespace: kube-system
    labels:
      k8s-app: elasticsearch-logging
      kubernetes.io/cluster-service: "true"
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.io/name: "Elasticsearch"
  spec:
    ports:
    - port: 9200
      protocol: TCP
      targetPort: db
    selector:
      k8s-app: elasticsearch-logging

- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    name: elasticsearch-logging
    namespace: kube-system
    labels:
      k8s-app: elasticsearch-logging
      kubernetes.io/cluster-service: "true"
      addonmanager.kubernetes.io/mode: Reconcile
  spec:
    serviceName: elasticsearch-logging
    replicas: 3
    selector:
      matchLabels:
        k8s-app: elasticsearch-logging
    template:
      metadata:
        labels:
          k8s-app: elasticsearch-logging
          kubernetes.io/cluster-service: "true"
      spec:
        serviceAccountName: elasticsearch-logging
        nodeSelector:
          efk: efk
        tolerations:
        - key: "efk_taint"
          operator: "Exists"
          effect: "NoSchedule"
        initContainers:
        - image: dockerhub.azk8s.cn/library/alpine:3.6
          command: ["/sbin/sysctl", "-w", "vm.max_map_count=262144"]
          name: elasticsearch-logging-init
          securityContext:
            privileged: true
        containers:
        #- image: gcr.io/fluentd-elasticsearch/elasticsearch:v6.6.1
        - image: gcr.azk8s.cn/fluentd-elasticsearch/elasticsearch:v6.6.1 
          name: elasticsearch-logging
          resources:
            # need more cpu upon initialization, therefore burstable class
            limits:
              cpu: 4
              memory: "4096Mi"
            requests:
              cpu: 100m
          ports:
          - containerPort: 9200
            name: db
            protocol: TCP
          - containerPort: 9300
            name: transport
            protocol: TCP
          volumeMounts:
          - name: elasticsearch-logging
            mountPath: /data
          env:
          - name: "NAMESPACE"
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        volumes:
        - name: elasticsearch-logging
          emptyDir: {}
    #volumeClaimTemplates:
    #- metadata:
    #    name: elasticsearch-logging
    #  spec:
    #    accessModes: [ "ReadWriteMany" ]
    #    storageClassName: "es-storage-class"
    #    resources:
    #      requests:
    #        storage: 4Gi